[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neurograd"
version = "0.1.0"
description = "A Pure Python Deep Learning Framework with Automatic Differentiation"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Bujor Ionut Raul", email = "b-ionut-r@users.noreply.github.com"},
]
maintainers = [
    {name = "Bujor Ionut Raul", email = "b-ionut-r@users.noreply.github.com"},
]
keywords = [
    "deep-learning",
    "neural-networks",
    "automatic-differentiation",
    "machine-learning",
    "pytorch-like",
    "python",
    "gpu",
    "cuda",
    "conv2d",
    "backpropagation"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.7"
dependencies = [
    "numpy>=1.19.0",
]

[project.optional-dependencies]
gpu = [
    "cupy-cuda12x>=12.0.0",
]
visualization = [
    "matplotlib>=3.3.0",
]
examples = [
    "scikit-learn>=0.24.0",
    "matplotlib>=3.3.0",
]
notebooks = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "matplotlib>=3.3.0",
    "scikit-learn>=0.24.0",
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
]
all = [
    "cupy-cuda12x>=12.0.0",
    "matplotlib>=3.3.0",
    "scikit-learn>=0.24.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "pytest>=6.0.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
]

[project.urls]
Homepage = "https://github.com/b-ionut-r/neurograd"
Repository = "https://github.com/b-ionut-r/neurograd"
Documentation = "https://github.com/b-ionut-r/neurograd#readme"
"Bug Tracker" = "https://github.com/b-ionut-r/neurograd/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["neurograd*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
neurograd = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=neurograd --cov-report=term-missing --cov-report=html"

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
